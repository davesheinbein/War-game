Font URL - https://fonts.google.com/specimen/Press+Start+2P?query=art&preview.text=War!&preview.text_type=custom&sidebar.open&selection.family=Press+Start+2P
Sounds -
    Background Music: https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_04_-_Sentinel.mp3


// VVVVVV refactoring code found a better way VVVVV

// let suits = ['S', 'C', 'D', 'H']; // 'spades', 'clubs', 'diamond', 'hearts'
// let ranks = ['02', '03', '04', '05', '06', '07', '08', '09', '10', 'J', 'Q', 'K', 'A'];
// let deck = []


// for (let suitCounter = 0; suitCounter <4; suitCounter++) {
//     for (let rankCounter = 0; rankCounter < 13; rankCounter++) {
//         deck.push(ranks[rankCounter] + ' ' + suits[suitCounter]);
//     }
// }
// console.log(deck);

//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//  ^^^^^^^^^^^^^^^^^^^^^Refactored into below VVVVVVVVVVVVVVVVVVV

class Deck {
    constructor() {
        this.deck = [];

        const suits = ['Spades', 'Clubs', 'Diamonds', 'Hearts']; // 'spades', 'clubs', 'diamond', 'hearts'
        const numValues = ['02', '03', '04', '05', '06', '07', '08', '09', '10', 'Jack', 'Queen', 'King', 'Ace']; // Ace is high

        for (let suit in suits) {
            for (let numValue in numValues) {
                this.deck.push(`${numValues[numValue]} ${suits[suit]}`);
            }
        }
    }
}
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
class Card { // Sets card parameters for the properties suit and numValues
    constructor(suit, numValue) {
        this.suit = suit;
        this.numValue = numValue;
    }
}

class Deck { // all aespects of the deck
    constructor() {
        this.deck = [];
    }

    createDeck(suits, numValues) {   
        for(let suit of suits) { // sets suit for each idx of the arr suits
            for(let numValue of numValues) { // sets numValue 
                this.deck.push(new Card(suit, numValue));
            }
        }
        return this.deck;
    }

    shuffle() {
        let counter = this.deck.length, tempCounter, iteration;

        while(counter) { // flipping elements in the array below
            iteration = Math.floor(Math.random() * counter--); 
            tempCounter = this.deck[counter];
            this.deck[counter] = this.deck[iteration];
            this.deck[iteration] = tempCounter;
        }
        return this.deck;
    }

    deal(){
        let hand = [];
        while(hand.length < 26) { // deals 26 cards
            hand.push(this.deck.pop());
        }
        return hand;
    }
    
}

let suits = ['Spades', 'Clubs', 'Diamonds', 'Hearts']; // 'spades', 'clubs', 'diamond', 'hearts'
let numValues = ['02', '03', '04', '05', '06', '07', '08', '09', '10', 'Jack', 'Queen', 'King', 'Ace']; // Ace is high
let deck = new Deck();

deck.createDeck(suits, numValues); // creates the deck
deck.shuffle();  // shuffles the deck
deck.deal(); // Deals cards
console.log(deck);

// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// Might use below discuss with collegues and Alex/Michael vvvv

	// const cardsLookup = {
	//     player1: {
	//         playerNo: '1';
	//         suits: ['spades', 'clubs', 'diamond', 'hearts'];
	//         ranks: ['02', '03', '04', '05', '06', '07', '08', '09', '10', 'J', 'Q', 'K', 'A'];
	//         deck: 52
	//     },
	//     player2: {
	//         playerNo: '-1';
	//         suits: ['spades', 'clubs', 'diamond', 'hearts'];
	//         ranks: ['02', '03', '04', '05', '06', '07', '08', '09', '10', 'J', 'Q', 'K', 'A'];
	//         deck: 52
	//     },
	//     totalCards: {
	//         deck: `${player1.deck} + ${player2.deck}`
	//     }
	// };

// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



Remember to 

	// Uncomment in JS once you know what to put vvv

	// winner = // 104 cards
	// }



Now that Deck of 52 cards is built consider using 1 deck of 52 
	instead of 2 decks that add up to 104


// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV	
const scoreElemenets = {
    player1: document.querySelector('#player1-score'),
    player2: document.querySelector('#player2-score')
};
const resultsElements = {
    player1: document.querySelector('#player1-result img'),
    player2: document.querySelector('#player2-result img')
    
};
// Add back in once you know what to put vvv

// winner = // 104 cards
// }

// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^